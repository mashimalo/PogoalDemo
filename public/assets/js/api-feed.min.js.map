{"version":3,"sources":["api-feed.js"],"names":[],"mappingsfile":"api-feed.min.js","sourcesContent":["// Ajax Notification\nfunction ajaxNotification($content, $status) {\n    // Icon Cache\n    var $icon = \"info\";\n    if ($status === \"success\") {\n        $icon = \"smile\"\n    }\n    if ($status === \"error\") {\n        $icon = \"warn\"\n    }\n\n    // Notification Template Cache\n    var $notificationTemplate = \"<div id='ajax-notification' class='uiAlert--ajax text-center'>\" +\n        \"<div class='uiAlert--ajax__container bg-\" + $status + \"'>\" +\n        \"<span class='icon icon-\" + $icon + \"'></span>\" +\n        \"<div>\" + $content + \"</div>\" +\n        \"</div></div>\";\n\n    // Prepend notification\n    $($notificationTemplate).appendTo(\"body\").hide().slideDown();\n\n    // Remove notification after X seconds\n    setTimeout(function () {\n        $(\"#ajax-notification\").slideToggle(200, function () {\n            $(this).remove();\n        });\n    }, 1500);\n}\n\n// Remove Ajax Notification\nfunction removeAjaxNotification() {\n    $(\"#ajax-notification\").remove();\n}\n\n// AJAX\n$(function () {\n\n    // DIV Cache\n    var $body = $(\"body\");\n    var $feedUnpinnedList = $(\"#feeds-unpinned\");\n    // var $feedPinnedList = $(\"#feeds-pinned\");\n    var $feedUnpinnedCount = $(\"#feed-unpinned-count\");\n    var $feedPinnedCount = $(\"#feed-pinned-count\");\n    var $feedTotalCount = $(\"#feed-total-count\");\n\n    // *** Action Button Cache\n    // Post\n    var $postFeedButton = \"button[data-action='post-feed']\";\n    var $postFeedReplyButton = \"button[data-action='post-feed-reply']\";\n    var $postFeedChildReplyButton = \"button[data-action='post-feed-childReply']\";\n    // Edit\n    var $editFeedButton = \"button[data-action='edit-feed']\";\n    var $editFeedReplyButton = \"button[data-action='edit-feed-reply']\";\n    var $editFeedChildReplyButton = \"button[data-action='edit-feed-childReply']\";\n    // Insert\n    var $insertFeedReplyFormButton = \"button[data-action='insert-feed-reply-form']\";\n    // Delete\n    var $deleteFeedButton = \"button[data-action='delete-feed']\";\n    var $deleteFeedReplyButton = \"button[data-action='delete-feed-reply']\";\n    var $deleteFeedChildReplyButton = \"button[data-action='delete-feed-childReply']\";\n    // Like\n    var $feedLikeButton = \"button[data-action='feed-like']\";\n    var $feedReplyLikeButton = \"button[data-action='feed-reply-like']\"; // Work for both feed reply and feed childReply\n    // Unlike\n    var $feedUnlikeButton = \"button[data-action='feed-unlike']\";\n    var $feedReplyUnlikeButton = \"button[data-action='feed-reply-unlike']\"; // Work for both feed reply and feed childReply\n\n    // Confirm Button Cache\n    var $editFeedConfirmedButton = \"button[data-action='edit-feed-confirmed']\";\n    var $editFeedChildReplyConfirmedButton = \"button[data-action='edit-feed-childReply-confirmed']\";\n    var $editFeedReplyConfirmedButton = \"button[data-action='edit-feed-reply-confirmed']\";\n    var $deleteFeedConfirmedButton = \"button[data-action='delete-feed-confirmed']\";\n    var $deleteFeedReplyConfirmedButton = \"button[data-action='delete-feed-reply-confirmed']\";\n    var $deleteFeedChildReplyConfirmedButton = \"button[data-action='delete-feed-childReply-confirmed']\";\n\n\n    // Attributes Cache\n    var $csrf_token = $(\"meta[name=_token]\").attr(\"content\");\n    var $my_firstName = $('meta[name=\"my_firstName\"]').attr(\"content\");\n    var $my_avatar = $('meta[name=\"my_avatar\"]').attr(\"content\");\n    // var $user_lastName = $('meta[name=\"user_lastName\"]').attr(\"content\");\n\n\n    /*--------------------------------------------------------------------------\n     | Post Feed\n     --------------------------------------------------------------------------*/\n    $body.on(\"click\", $postFeedButton, function () {\n\n        // Cache\n        var $this = $(this);\n        var $richForm = $this.closest(\".rich-form\");\n        var $richFormBody = $richForm.find(\".rich-form-body\");\n        var $textarea = $richForm.find(\"textarea\");\n        var $textarea_content = $textarea.val();\n        var $group_id = $this.attr(\"data-group-id\");\n        var $data_action_for = $this.attr(\"data-action-for\");\n\n        // Disable inputs to prevent multiple submit\n        $this.attr('disabled', 'disabled');\n        $textarea.attr('disabled', 'disabled');\n\n        // Add loading animation\n        $this.addClass(\"loading\");\n\n        // Remove previous ajax notification\n        removeAjaxNotification();\n\n        // AJAX\n        $.ajaxSetup({\n            headers: {\n                'X-CSRF-TOKEN': $('meta[name=\"_token\"]').attr('content')\n            }\n        });\n        $.ajax({\n            url: \"/\" + $data_action_for + \"/\" + $group_id + \"/postFeed\",\n            type: \"POST\",\n            dataType: \"json\",\n            data: {\n                'feed': $textarea_content\n            },\n            success: function (data) {\n\n                // Data Cache\n                var $data = {\n                    data_action_for: $data_action_for,\n                    feed_id: data.json.id,\n                    post_time: data.json.post_time,\n                    user_name: data.json.user_name,\n                    user_profile_link: data.json.user_profile_link,\n                    feed_content: data.json.content.nl2br(),\n                    csrf_token: $csrf_token,\n                    my_firstName: $my_firstName\n                };\n\n                // Dynamic data key cache - group\n                if($data_action_for == \"group\"){\n                    var $data_group_id = data.json.group_id;\n                } else if($data_action_for == \"docking\"){\n                    var $data_group_id = data.json.docking_group_id;\n                }\n                $data[\"group_id\"] = $data_group_id;\n\n                // Dynamic data key cache - avatar\n                var $user_avatar = $baseURL + '/images/userAvatar/' + data.json.user_avatar_small;\n                $data[\"user_avatar\"] = $user_avatar;\n\n                // Dynamic data key cache - initial avatar\n                if (data.json.user_avatar_small == null) {\n                    var $user_initialAvatar = \"initialAvatar\";\n                }\n                $data[\"user_initialAvatar\"] = $user_initialAvatar;\n\n                // Dynamic data key cache - my avatar\n                var $my_avatar_src= $baseURL + '/images/userAvatar/' + $my_avatar;\n                $data[\"my_avatar_src\"] = $my_avatar_src;\n\n                // Dynamic data key cache - my initial avatar\n                if (!$my_avatar) {\n                    var $my_initialAvatar = \"initialAvatar\";\n                }\n                $data[\"my_initialAvatar\"] = $my_initialAvatar;\n\n                // Get Feed template\n                $.get('/api/feed-v000011.template', function (template) {\n                    var $feedTemplate = Mustache.render(template, $data);\n\n                    // prepend it to #feeds-unpinned\n                    $feedUnpinnedList.prepend($feedTemplate);\n\n                    // Execute external functions\n                    initialAvatar();\n\n                }).done(function () {\n\n                    // Slide out the new feed\n                    $feedUnpinnedList.find(\".uiFeed:first-child\").slideToggle(500);\n\n                });\n\n                // Update unpinned feed count\n                $feedUnpinnedCount.text(data.json.feed_unpinned_count);\n\n                // Update feed total count\n                $feedTotalCount.text(data.json.feed_unpinned_count + data.json.feed_pinned_count);\n\n                // Remove disabled attribute\n                $this.removeAttr(\"disabled\");\n                $textarea.removeAttr(\"disabled\");\n\n                // Remove loading animation\n                $this.removeClass(\"loading\");\n\n                // Remove textarea value\n                $textarea.val(\"\");\n\n                // Close rich form\n                $richFormBody.removeClass(\"active\");\n                $textarea.css({height: \"36px\"});\n\n                // Run ajax notification\n                ajaxNotification(\"Your have successfully posted a feed.\", \"success\");\n\n                // Remove #pageEmptyMsg\n                $('#pageEmptyMsg').remove();\n\n            },\n            error: function (data) {\n                // Remove disabled attribute\n                $this.removeAttr(\"disabled\");\n                $textarea.removeAttr(\"disabled\");\n\n                // Remove loading animation\n                $this.removeClass(\"loading\");\n\n                // Run ajax notification\n                ajaxNotification(\"Oops! Something went wrong.\", \"error\");\n            }\n        });\n    });\n\n\n    /*--------------------------------------------------------------------------\n     | Post Feed Reply\n     --------------------------------------------------------------------------*/\n    $body.on(\"click\", $postFeedReplyButton, function () {\n\n        // Cache\n        var $this = $(this);\n        var $footerToggleCount = $this.closest(\".uiFeed__footer\").find(\".uiFeed__footer__toggle .btn-sns__count\");\n        var $feedReplyList = $this.closest('.uiFeed__footer__toggle').siblings(\".uiFeed__footer__mask\").children(\".uiFeed__reply\");\n\n\n\n        var $feedReplyFrom = $this.closest(\".uiFeed__reply__form\");\n        var $textarea = $feedReplyFrom.find(\"textarea\");\n        var $textarea_content = $textarea.val();\n        var $group_id = $this.attr(\"data-group-id\");\n        var $feed_id = $this.attr(\"data-feed-id\");\n        var $data_action_for = $this.attr(\"data-action-for\");\n\n        // Disable inputs to prevent multiple submit\n        $this.attr('disabled', 'disabled');\n        $textarea.attr('disabled', 'disabled');\n\n        // Add loading animation\n        $this.addClass(\"loading\");\n\n        // Remove previous ajax notification\n        removeAjaxNotification();\n\n        // Dynamic data key cache\n        var $data = {};\n        var $reply_feed_id = \"reply-\" + $feed_id;\n        $data[$reply_feed_id] = $textarea_content;\n\n        // AJAX\n        $.ajaxSetup({\n            headers: {\n                'X-CSRF-TOKEN': $('meta[name=\"_token\"]').attr('content')\n            }\n        });\n        $.ajax({\n            url: \"/\" + $data_action_for + \"/\" + $group_id + \"/\" + $feed_id + \"/postComment\",\n            type: \"POST\",\n            dataType: \"json\",\n            data: $data,\n            success: function (data) {\n                console.log(data);\n\n                // Response data cache\n                var $data = {\n                    data_action_for: $data_action_for,\n                    feed_id: data.json.feed_id,\n                    reply_id: data.json.id,\n                    post_time: data.json.post_time,\n                    user_name: data.json.user_name,\n                    user_profile_link: data.json.user_profile_link,\n                    content: data.json.content.nl2br(),\n                    all_reply_count: data.json.all_reply_count,\n                    csrf_token: $csrf_token,\n                    user_avatar_small: data.json.user_avatar_small\n                };\n\n                // Dynamic data key cache - group\n                if ($data_action_for == \"group\") {\n                    var $data_group_id = data.json.group_id;\n                } else if ($data_action_for == \"docking\") {\n                    var $data_group_id = data.json.docking_group_id;\n                }\n                $data[\"group_id\"] = $data_group_id;\n\n                // Dynamic data key cache - avatar\n                var $user_avatar = $baseURL + '/images/userAvatar/' + data.json.user_avatar_small;\n                $data[\"user_avatar\"] = $user_avatar;\n\n                // Dynamic data key cache - initial avatar\n                if (data.json.user_avatar_small == null) {\n                    var $user_initialAvatar = \"initialAvatar\";\n                }\n                $data[\"user_initialAvatar\"] = $user_initialAvatar;\n\n                // Get Feed Reply template\n                $.get('/api/feed-reply-v000007.template', function (template) {\n                    var $feedReplyTemplate = Mustache.render(template, $data);\n\n                    // Display .uiFeed__footer__mask\n                    $this.closest('.uiFeed__footer__toggle').siblings(\".uiFeed__footer__mask\").slideDown(\"fast\");\n\n                    // Prepend it to .uiFeed__reply\n                    $feedReplyList.prepend($feedReplyTemplate);\n\n                    // Execute external functions\n                    initialAvatar();\n\n                }).done(function () {\n\n                    // Slide out the new feed\n                    $feedReplyList.children(\".uiFeed__reply__item:first-child\").slideToggle(500);\n\n                });\n\n                // Update total reply count\n                $footerToggleCount.text(data.json.all_reply_count);\n\n                // Remove disabled attribute\n                $this.removeAttr(\"disabled\");\n                $textarea.removeAttr(\"disabled\");\n\n                // Remove loading animation\n                $this.removeClass(\"loading\");\n\n                // Remove textarea value\n                $textarea.val(\"\");\n\n                // Show the .close button\n                $this.closest(\".uiFeed__footer__mask\").find(\".close\").show();\n\n                // Run ajax notification\n                ajaxNotification(\"Your have successfully posted a reply.\", \"success\");\n\n            },\n            error: function (data) {\n                console.log(data);\n\n                // Remove disabled attribute\n                $this.removeAttr(\"disabled\");\n                $textarea.removeAttr(\"disabled\");\n\n                // Remove loading animation\n                $this.removeClass(\"loading\");\n\n                // Run ajax notification\n                ajaxNotification(\"Oops! Something went wrong.\", \"error\");\n            }\n        });\n    });\n\n\n    /*--------------------------------------------------------------------------\n     | Insert Feed Reply Form\n     --------------------------------------------------------------------------*/\n    $body.on(\"click\", $insertFeedReplyFormButton, function () {\n\n        // Cache\n        var $this = $(this);\n        var $parent = $this.closest(\".uiFeed__misc\");\n        var $group_id = $this.attr(\"data-group-id\");\n        var $feed_id = $this.attr(\"data-feed-id\");\n        var $reply_id = $this.attr(\"data-reply-id\");\n        var $data_action_for = $this.attr(\"data-action-for\");\n\n        // Data Cache\n        var $data = {\n            data_action_for: $data_action_for,\n            group_id: $group_id,\n            feed_id: $feed_id,\n            reply_id: $reply_id,\n            csrf_token: $csrf_token,\n            my_firstName: $my_firstName\n        };\n\n        // Dynamic data key cache - my avatar\n        var $my_avatar_src= $baseURL + '/images/userAvatar/' + $my_avatar;\n        $data[\"my_avatar_src\"] = $my_avatar_src;\n\n        // Dynamic data key cache - my initial avatar\n        if (!$my_avatar) {\n            var $my_initialAvatar = \"initialAvatar\";\n        }\n        $data[\"my_initialAvatar\"] = $my_initialAvatar;\n\n        // If selector does not have .clicked class, run the event.\n        if (!$this.hasClass(\"clicked\")) {\n\n            // insert .uiFeed__reply__form after .uiFeed__misc\n            $parent.after(\"<div class='uiFeed__reply__form'></div>\");\n\n            // Get Feed Reply Form template\n            $.get('/api/feed-reply-form-v000006.template', function (template) {\n                var $replyFormTemplate = Mustache.render(template, $data);\n\n                // Append id to .uiFeed__reply__form\n                $parent.siblings(\".uiFeed__reply__form\").append($replyFormTemplate).hide().fadeIn(\"slow\");\n\n                // Execute external functions\n                initialAvatar();\n            });\n\n            // Add .clicked class to prevent event.\n            $this.addClass(\"clicked\");\n\n        } else if ($this.hasClass(\"clicked\")) {\n\n            // remove form\n            $parent.siblings(\".uiFeed__reply__form\").remove();\n\n            // Add .clicked class to prevent event.\n            $this.removeClass(\"clicked\");\n\n        }\n    });\n\n\n    /*--------------------------------------------------------------------------\n     | Post Feed Child Reply\n     --------------------------------------------------------------------------*/\n    $body.on(\"click\", $postFeedChildReplyButton, function () {\n        // Cache\n        var $this = $(this);\n        var $footerToggleCount = $this.closest(\".uiFeed__footer\").find(\".uiFeed__footer__toggle .btn-sns__count\");\n        var $feedChildReplyList = $this.closest(\".uiFeed__reply__item\").children(\".uiFeed__reply__secondLevel\");\n        var $feedChildReplyFrom = $this.closest(\".uiFeed__reply__form\");\n        var $textarea = $feedChildReplyFrom.find(\"textarea\");\n        var $textarea_content = $textarea.val();\n        var $group_id = $this.attr(\"data-group-id\");\n        var $feed_id = $this.attr(\"data-feed-id\");\n        var $reply_id = $this.attr(\"data-reply-id\");\n        var $data_action_for = $this.attr(\"data-action-for\");\n\n        // Disable inputs to prevent multiple submit\n        $this.attr('disabled', 'disabled');\n        $textarea.attr('disabled', 'disabled');\n\n        // Add loading animation \n        $this.addClass(\"loading\");\n\n        // Remove previous ajax notification\n        removeAjaxNotification();\n\n        // Dynamic data key cache\n        var $data = {};\n        var $childReply_feed_id = \"2ndReply-\" + $reply_id;\n        $data[$childReply_feed_id] = $textarea_content;\n\n        // AJAX\n        $.ajaxSetup({\n            headers: {\n                'X-CSRF-TOKEN': $('meta[name=\"_token\"]').attr('content')\n            }\n        });\n        $.ajax({\n            url: \"/\" + $data_action_for + \"/\" + $group_id + \"/\" + $feed_id + \"/comment/\" + $reply_id + \"/postChildComment\",\n            type: \"POST\",\n            dataType: \"json\",\n            data: $data,\n            success: function (data) {\n                console.log(data);\n\n                // Response data cache\n                var $data = {\n                    data_action_for: $data_action_for,\n                    feed_id: data.json.feed_id,\n                    reply_id: data.json.parent_id,\n                    childReply_id: data.json.id,\n                    post_time: data.json.post_time,\n                    user_name: data.json.user_name,\n                    user_profile_link: data.json.user_profile_link,\n                    content: data.json.content.nl2br(),\n                    all_reply_count: data.json.all_reply_count\n                };\n\n                // Dynamic data key cache - group\n                if ($data_action_for == \"group\") {\n                    var $data_group_id = data.json.group_id;\n                } else if ($data_action_for == \"docking\") {\n                    var $data_group_id = data.json.docking_group_id;\n                }\n                $data[\"group_id\"] = $data_group_id;\n\n                // Dynamic data key cache - avatar\n                var $user_avatar = $baseURL + '/images/userAvatar/' + data.json.user_avatar_small;\n                $data[\"user_avatar\"] = $user_avatar;\n\n                // Dynamic data key cache - initial avatar\n                if (data.json.user_avatar_small == null) {\n                    var $user_initialAvatar = \"initialAvatar\";\n                }\n                $data[\"user_initialAvatar\"] = $user_initialAvatar;\n\n                // Get Feed Child Reply template\n                $.get('/api/feed-childReply-v000006.template', function (template) {\n                    var $feedChildReplyTemplate = Mustache.render(template, $data);\n\n                    // Prepend it to .uiFeed__reply__secondLvl\n                    $feedChildReplyList.prepend($feedChildReplyTemplate);\n\n                    // Execute external functions\n                    initialAvatar();\n\n                }).done(function () {\n\n                    // Slide out the new reply\n                    $feedChildReplyList.children(\".uiFeed__reply__item:first-child\").slideToggle(500);\n\n                });\n\n                // Update total reply count\n                $footerToggleCount.text(data.json.all_reply_count);\n\n                // Remove disabled attribute\n                $this.removeAttr(\"disabled\");\n                $textarea.removeAttr(\"disabled\");\n\n                // Remove loading animation\n                $this.removeClass(\"loading\");\n\n                // Remove textarea value\n                $textarea.val(\"\");\n\n                // Run ajax notification\n                ajaxNotification(\"Your have successfully posted a reply.\", \"success\");\n\n            },\n            error: function (data) {\n                console.log(data);\n\n                // Remove disabled attribute\n                $this.removeAttr(\"disabled\");\n                $textarea.removeAttr(\"disabled\");\n\n                // Remove loading animation\n                $this.removeClass(\"loading\");\n\n                // Run ajax notification\n                ajaxNotification(\"Oops! Something went wrong.\", \"error\");\n            }\n        });\n    });\n\n\n    /*--------------------------------------------------------------------------\n     | Edit Feed\n     --------------------------------------------------------------------------*/\n    $body.on(\"click\", $editFeedButton, function () {\n\n        // Cache\n        var $this = $(this);\n        var $feed = $this.closest(\".uiFeed\");\n        var $feedContent = $feed.find(\".uiFeed__main .uiFeed__article__text\");\n        var $feed_original_content = $feedContent.text();\n        var $group_id = $this.attr(\"data-group-id\");\n        var $feed_id = $this.attr(\"data-feed-id\");\n        var $data_action_for = $this.attr(\"data-action-for\");\n\n        // Data cache\n        var $data = {\n            data_action_for: $data_action_for,\n            group_id: $group_id,\n            feed_id: $feed_id,\n            feed_original_content: $feed_original_content\n        };\n\n        // Remove previous ajax notification\n        removeAjaxNotification();\n\n        // If selector does not have .clicked class, run the event\n        if (!$this.hasClass(\"clicked\")) {\n\n            // Get Edit Feed Modal template\n            $.get('/api/edit-feed-modal-v000004.template', function (template) {\n                    var $editFeedModal = Mustache.render(template, $data);\n\n                    // Append it to .uiFeed\n                    $feed.append($editFeedModal);\n\n                    // add modal attribute to the delete button\n                    $this.attr(\"data-toggle\", \"modal\");\n                    $this.attr(\"data-target\", \"#edit-feed-\" + $group_id + $feed_id);\n                })\n                .done(function () {\n                    // Run the modal\n                    $this.click();\n                });\n\n            // Confirm to run the ajax\n            $feed.on(\"click\", $editFeedConfirmedButton, function () {\n\n                // Feed edited content cache\n                var $feed_modal_content = \"#edit-feed-\" + $group_id + $feed_id + \" textarea\";\n                var $feed_edited_content = $feed.find($feed_modal_content).val();\n\n                $.ajaxSetup({\n                    headers: {\n                        'X-CSRF-TOKEN': $('meta[name=\"_token\"]').attr('content')\n                    }\n                });\n                $.ajax({\n                    type: \"PATCH\",\n                    dataType: \"json\",\n                    url: \"/\" + $data_action_for + \"/\" + $group_id + \"/\" + $feed_id + \"/edit\",\n                    data: {\n                        'feed': $feed_edited_content\n                    },\n                    success: function (data) {\n\n                        // Update the content\n                        $feedContent.html(data.json.content.nl2br());\n\n                        // Run ajax notification\n                        ajaxNotification(\"Your have successfully edited a feed\", \"success\");\n\n                    },\n                    error: function (data) {\n                        console.log(data);\n                        // Run ajax notification\n                        ajaxNotification(\"Oops! Something went wrong.\", \"error\");\n                    }\n                });\n            });\n\n            // Add .clicked class to prevent event\n            $this.addClass(\"clicked\");\n        }\n\n        // If selector has .clicked class, run the event\n        if ($this.hasClass(\"clicked\")) {\n\n            // Fetch feed content to modal again\n            var $feed_modal_content = \"#edit-feed-\" + $group_id + $feed_id + \" textarea\";\n            $feed.find($feed_modal_content).val($feed_original_content);\n        }\n    });\n\n\n    /*--------------------------------------------------------------------------\n     | Edit Feed Reply\n     --------------------------------------------------------------------------*/\n    $body.on(\"click\", $editFeedReplyButton, function () {\n\n        // Cache\n        var $this = $(this);\n        var $feedReplyItem = $this.closest(\".uiFeed__reply__item\");\n        var $feedReplyContent = $feedReplyItem.children(\".uiFeed__article\").find(\".uiFeed__article__text\");\n        var $feed_reply_original_content = $feedReplyContent.text();\n        var $group_id = $this.attr(\"data-group-id\");\n        var $feed_id = $this.attr(\"data-feed-id\");\n        var $reply_id = $this.attr(\"data-reply-id\");\n        var $data_action_for = $this.attr(\"data-action-for\");\n\n        // Data Cache\n        var $data = {\n            data_action_for: $data_action_for,\n            group_id: $group_id,\n            feed_id: $feed_id,\n            reply_id: $reply_id,\n            feed_reply_original_content: $feed_reply_original_content\n        };\n\n        // Remove previous ajax notification\n        removeAjaxNotification();\n\n        // If selector does not have .clicked class, run the event.\n        if (!$this.hasClass(\"clicked\")) {\n\n            // Get Edit Feed Modal template\n            $.get('/api/edit-feed-reply-modal-v000004.template', function (template) {\n                    var $editFeedReplyModal = Mustache.render(template, $data);\n\n                    // Append it to .uiFeed__reply__item\n                    $feedReplyItem.append($editFeedReplyModal);\n\n                    // add modal attribute to the delete button\n                    $this.attr(\"data-toggle\", \"modal\");\n                    $this.attr(\"data-target\", \"#edit-feed-reply-\" + $group_id + $feed_id + $reply_id);\n                })\n                .done(function () {\n                    // Run the modal\n                    $this.click();\n                });\n\n            // click modal delete button to fire the ajax\n            $feedReplyItem.on(\"click\", $editFeedReplyConfirmedButton, function () {\n\n                // Feed reply edited content cache\n                var $feed_reply_modal_content = \"#edit-feed-reply-\" + $group_id + $feed_id + $reply_id + \" textarea\";\n                var $feed_reply_edited_content = $feedReplyItem.find($feed_reply_modal_content).val();\n\n                $.ajaxSetup({\n                    headers: {\n                        'X-CSRF-TOKEN': $('meta[name=\"_token\"]').attr('content')\n                    }\n                });\n                $.ajax({\n                    type: \"PATCH\",\n                    dataType: \"json\",\n                    url: \"/\" + $data_action_for + \"/\" + $group_id + \"/\" + $feed_id + \"/comment/\" + $reply_id + \"/edit\",\n                    data: {\n                        'editComment': $feed_reply_edited_content\n                    },\n                    success: function (data) {\n\n                        // Update the content\n                        $feedReplyContent.html(data.json.content.nl2br());\n\n                        // Run ajax notification\n                        ajaxNotification(\"Your have successfully edited a feed.\", \"success\");\n\n                    },\n                    error: function (data) {\n                        console.log(data);\n\n                        // Run ajax notification\n                        ajaxNotification(\"Oops! Something went wrong.\", \"error\");\n                    }\n                });\n            });\n\n            // Add .clicked class to prevent event.\n            $this.addClass(\"clicked\");\n        }\n\n        // If selector has .clicked class, run the event.\n        if ($this.hasClass(\"clicked\")) {\n\n            // Fetch feed reply content to modal again.\n            var $feed_reply_modal_content = \"#edit-feed-reply-\" + $group_id + $feed_id + $reply_id + \" textarea\";\n            $feedReplyItem.find($feed_reply_modal_content).val($feed_reply_original_content);\n        }\n    });\n\n\n    /*--------------------------------------------------------------------------\n     | Edit Feed childReply\n     --------------------------------------------------------------------------*/\n    $body.on(\"click\", $editFeedChildReplyButton, function () {\n\n        // Cache\n        var $this = $(this);\n        var $feedChildReplyItem = $this.closest(\".uiFeed__reply__item\");\n        var $feedChildReplyContent = $feedChildReplyItem.children(\".uiFeed__article\").find(\".uiFeed__article__text\");\n        var $feed_childReply_original_content = $feedChildReplyContent.text();\n        var $group_id = $this.attr(\"data-group-id\");\n        var $feed_id = $this.attr(\"data-feed-id\");\n        var $reply_id = $this.attr(\"data-reply-id\");\n        var $childReply_id = $this.attr(\"data-childReply-id\");\n        var $data_action_for = $this.attr(\"data-action-for\");\n\n        // Data Cache\n        var $data = {\n            data_action_for: $data_action_for,\n            group_id: $group_id,\n            feed_id: $feed_id,\n            reply_id: $reply_id,\n            childReply_id: $childReply_id,\n            feed_childReply_original_content: $feed_childReply_original_content\n        };\n\n        // Remove previous ajax notification\n        removeAjaxNotification();\n\n        // If selector does not have .clicked class, run the event.\n        if (!$this.hasClass(\"clicked\")) {\n\n            // Get Edit Feed Modal template\n            $.get('/api/edit-feed-childReply-modal-v000004.template', function (template) {\n                    var $editFeedChildReplyModal = Mustache.render(template, $data);\n\n                    // Append it to .uiFeed__reply__item\n                    $feedChildReplyItem.append($editFeedChildReplyModal);\n\n                    // add modal attribute to the delete button\n                    $this.attr(\"data-toggle\", \"modal\");\n                    $this.attr(\"data-target\", \"#edit-feed-childReply-\" + $group_id + $feed_id + $reply_id + $childReply_id);\n                })\n                .done(function () {\n                    // Run the modal\n                    $this.click();\n                });\n\n            // Confirm to run the ajax event\n            $feedChildReplyItem.on(\"click\", $editFeedChildReplyConfirmedButton, function () {\n\n                // Feed childReply edited content cache\n                var $feed_childReply_modal_content = \"#edit-feed-childReply-\" + $group_id + $feed_id + $reply_id + $childReply_id + \" textarea\";\n                var $feed_childReply_edited_content = $feedChildReplyItem.find($feed_childReply_modal_content).val();\n\n                $.ajaxSetup({\n                    headers: {\n                        'X-CSRF-TOKEN': $('meta[name=\"_token\"]').attr('content')\n                    }\n                });\n                $.ajax({\n                    type: \"PATCH\",\n                    dataType: \"json\",\n                    url: \"/\" + $data_action_for + \"/\" + $group_id + \"/\" + $feed_id + \"/comment/\" + $reply_id + \"/childComment/\" + $childReply_id + \"/edit\",\n                    data: {\n                        'editComment': $feed_childReply_edited_content\n                    },\n                    success: function (data) {\n\n                        // Update the content\n                        $feedChildReplyContent.html(data.json.content.nl2br());\n\n                        // Run ajax notification\n                        ajaxNotification(\"Your have successfully edited a reply.\", \"success\");\n\n                    },\n                    error: function (data) {\n                        console.log(data);\n\n                        // Run ajax notification\n                        ajaxNotification(\"Oops! Something went wrong.\", \"error\");\n                    }\n                });\n            });\n\n            // Add .clicked class to prevent event\n            $this.addClass(\"clicked\");\n        }\n\n        // If selector has .clicked class, run the event\n        if ($this.hasClass(\"clicked\")) {\n\n            // Fetch feed childReply to modal again\n            var $feed_childReply_modal_content = \"#edit-feed-childReply-\" + $group_id + $feed_id + $reply_id + $childReply_id + \" textarea\";\n            $feedChildReplyItem.find($feed_childReply_modal_content).val($feed_childReply_original_content);\n        }\n    });\n\n\n    /*--------------------------------------------------------------------------\n     | Delete Feed\n     --------------------------------------------------------------------------*/\n    $body.on(\"click\", $deleteFeedButton, function () {\n\n        // Cache\n        var $this = $(this);\n        var $feed = $this.closest(\".uiFeed\");\n        var $group_id = $this.attr(\"data-group-id\");\n        var $feed_id = $this.attr(\"data-feed-id\");\n        var $data_action_for = $this.attr(\"data-action-for\");\n\n        // Data Cache\n        var $data = {\n            data_action_for: $data_action_for,\n            group_id: $group_id,\n            feed_id: $feed_id\n        };\n\n        // Remove previous ajax notification\n        removeAjaxNotification();\n\n        // If selector does not have .clicked class, run the event\n        if (!$this.hasClass(\"clicked\")) {\n\n            // Get Delete Feed Modal template\n            $.get('/api/delete-feed-modal.template', function (template) {\n                    var $deleteFeedModal = Mustache.render(template, $data);\n\n                    // Append it to .uiFeed\n                    $feed.append($deleteFeedModal);\n\n                    // Add modal attribute to the delete button\n                    $this.attr(\"data-toggle\", \"modal\");\n                    $this.attr(\"data-target\", \"#delete-confirmation-\" + $group_id + $feed_id);\n                })\n                .done(function () {\n                    // Run the modal\n                    $this.click();\n                });\n\n            // Confirm to run the ajax event\n            $feed.one(\"click\", $deleteFeedConfirmedButton, function () {\n                $.ajaxSetup({\n                    headers: {\n                        'X-CSRF-TOKEN': $('meta[name=\"_token\"]').attr('content')\n                    }\n                });\n                $.ajax({\n                    type: \"DELETE\",\n                    dataType: \"json\",\n                    url: \"/\" + $data_action_for + \"/\" + $group_id + \"/\" + $feed_id + \"/delete\",\n                    success: function (data) {\n\n                        $feed.find(\".pinned-badge\").remove();\n\n                        // Remove this feed\n                        $feed.slideToggle(500, function () {\n                            $(this).remove();\n                        });\n\n                        // Update pinned feed & unpinned feed count\n                        $feedPinnedCount.text(data.json.feed_pinned_count);\n                        $feedUnpinnedCount.text(data.json.feed_unpinned_count);\n\n                        // Update feed total count\n                        $feedTotalCount.text(data.json.feed_unpinned_count + data.json.feed_pinned_count);\n\n                        // Run ajax notification\n                        ajaxNotification(\"Your have successfully deleted a feed.\", \"success\");\n\n                    },\n                    error: function (data) {\n                        console.log(data);\n\n                        // Run ajax notification\n                        ajaxNotification(\"Oops! Something went wrong.\", \"error\");\n                    }\n                });\n            });\n\n            // Add .clicked class to prevent event.\n            $this.addClass(\"clicked\");\n        }\n    });\n\n\n    /*--------------------------------------------------------------------------\n     | Delete Feed Reply\n     --------------------------------------------------------------------------*/\n    $body.on(\"click\", $deleteFeedReplyButton, function () {\n\n        // Cache\n        var $this = $(this);\n        var $footerToggleCount = $this.closest(\".uiFeed__footer\").find(\".uiFeed__footer__toggle .btn-sns__count\");\n        var $feedReplyItem = $this.closest(\".uiFeed__reply__item\");\n        var $group_id = $this.attr(\"data-group-id\");\n        var $feed_id = $this.attr(\"data-feed-id\");\n        var $reply_id = $this.attr(\"data-reply-id\");\n        var $data_action_for = $this.attr(\"data-action-for\");\n\n        // Data Cache\n        var $data = {\n            data_action_for: $data_action_for,\n            group_id: $group_id,\n            feed_id: $feed_id,\n            reply_id: $reply_id\n        };\n\n        // Remove previous ajax notification\n        removeAjaxNotification();\n\n        // If selector does not have .clicked class, run the event.\n        if (!$this.hasClass(\"clicked\")) {\n\n            // Get Delete Feed Modal template\n            $.get('/api/delete-feed-reply-modal-v000001.template', function (template) {\n                    var $deleteFeedReplyModal = Mustache.render(template, $data);\n\n                    // Append it to .uiFeed__reply__item\n                    $feedReplyItem.append($deleteFeedReplyModal);\n\n                    // Add modal attribute to the delete button\n                    $this.attr(\"data-toggle\", \"modal\");\n                    $this.attr(\"data-target\", \"#delete-confirmation-\" + $group_id + $feed_id + $reply_id);\n                })\n                .done(function () {\n                    // Run the modal\n                    $this.click();\n                });\n\n            // click modal delete button to fire the ajax\n            $feedReplyItem.one(\"click\", $deleteFeedReplyConfirmedButton, function () {\n                $.ajaxSetup({\n                    headers: {\n                        'X-CSRF-TOKEN': $('meta[name=\"_token\"]').attr('content')\n                    }\n                });\n                $.ajax({\n                    type: \"DELETE\",\n                    dataType: \"json\",\n                    url: \"/\" + $data_action_for + \"/\" + $group_id + \"/\" + $feed_id + \"/comment/\" + $reply_id + \"/delete\",\n                    success: function (data) {\n\n                        // Remove this reply\n                        $feedReplyItem.slideToggle(500, function () {\n                            $(this).remove();\n                        });\n\n                        // Update total reply count\n                        $footerToggleCount.text(data.json);\n\n                        // If this feed does not have reply, hide the close button\n                        if (data.json === 0) {\n                            $this.closest(\".uiFeed__footer__mask\").find(\".close\").hide();\n                        }\n\n                        // Run ajax notification\n                        ajaxNotification(\"Your have successfully deleted a reply.\", \"success\");\n\n                    },\n                    error: function (data) {\n                        console.log(data);\n\n                        // Run ajax notification\n                        ajaxNotification(\"Oops! Something went wrong\", \"error\");\n                    }\n                });\n            });\n\n            // Add .clicked class to prevent event.\n            $this.addClass(\"clicked\");\n        }\n    });\n\n\n    /*--------------------------------------------------------------------------\n     | Delete Feed Child Reply\n     --------------------------------------------------------------------------*/\n    $body.on(\"click\", $deleteFeedChildReplyButton, function () {\n\n        // Cache\n        var $this = $(this);\n        var $footerToggleCount = $this.closest(\".uiFeed__footer\").find(\".uiFeed__footer__toggle .btn-sns__count\");\n        var $feedChildReplyItem = $this.closest(\".uiFeed__reply__item\");\n        var $group_id = $this.attr(\"data-group-id\");\n        var $feed_id = $this.attr(\"data-feed-id\");\n        var $reply_id = $this.attr(\"data-reply-id\");\n        var $childReply_id = $this.attr(\"data-childreply-id\");\n        var $data_action_for = $this.attr(\"data-action-for\");\n\n        // Data Cache\n        var $data = {\n            data_action_for: $data_action_for,\n            group_id: $group_id,\n            feed_id: $feed_id,\n            reply_id: $reply_id,\n            childReply_id: $childReply_id\n        };\n\n        // Remove previous ajax notification\n        $(\"#ajax-notification\").remove();\n\n        // If selector does not have .clicked class, run the event.\n        if (!$this.hasClass(\"clicked\")) {\n\n            // Get Delete Feed Modal template\n            $.get('/api/delete-feed-childReply-modal-v000002.template', function (template) {\n                    var $deleteFeedChildReplyModal = Mustache.render(template, $data);\n\n                    // Append it to .uiFeed__reply__item\n                    $feedChildReplyItem.append($deleteFeedChildReplyModal);\n\n                    // Add modal attribute to the delete button\n                    $this.attr(\"data-toggle\", \"modal\");\n                    $this.attr(\"data-target\", \"#delete-confirmation-\" + $group_id + $feed_id + $reply_id + $childReply_id);\n                })\n                .done(function () {\n                    // Run the modal\n                    $this.click();\n                });\n\n            // click modal delete button to fire the ajax\n            $feedChildReplyItem.one(\"click\", $deleteFeedChildReplyConfirmedButton, function () {\n                $.ajaxSetup({\n                    headers: {\n                        'X-CSRF-TOKEN': $('meta[name=\"_token\"]').attr('content')\n                    }\n                });\n                $.ajax({\n                    type: \"DELETE\",\n                    dataType: \"json\",\n                    url: \"/\" + $data_action_for + \"/\" + $group_id + \"/\" + $feed_id + \"/comment/\" + $reply_id + \"/childComment/\" + $childReply_id + \"/delete\",\n                    success: function (data) {\n\n                        // Remove this reply\n                        $feedChildReplyItem.slideToggle(500, function () {\n                            $(this).remove();\n                        });\n\n                        // Update total reply count\n                        $footerToggleCount.text(data.json);\n\n                        // If this feed does not have reply, remove the close button\n                        if (data.json === 0) {\n                            $(\".uiFeed__reply\").siblings(\".close\").hide();\n                        }\n\n                        // Run ajax notification\n                        ajaxNotification(\"Your have successfully deleted a reply.\", \"success\");\n\n                    },\n                    error: function (data) {\n                        console.log(data);\n\n                        // Run ajax notification\n                        ajaxNotification(\"Oops! Something went wrong.\", \"error\");\n                    }\n                });\n            });\n\n            // Add .clicked class to prevent event.\n            $this.addClass(\"clicked\");\n        }\n\n    });\n\n\n    /*--------------------------------------------------------------------------\n     | Like Feed\n     --------------------------------------------------------------------------*/\n    $body.on(\"click\", $feedLikeButton, function () {\n\n        // Cache\n        var $this = $(this);\n        var $group_id = $this.attr(\"data-group-id\");\n        var $feedLikeCount = $this.children(\".btn-sns__count\");\n        var $feedUnlike = $this.siblings(\".unlike-submit\");\n        var $feedUnlikeCount = $feedUnlike.children(\".btn-sns__count\");\n        var $feed_id = $this.attr(\"data-feed-id\");\n        var $data_action_for = $this.attr(\"data-action-for\");\n\n        // Disable inputs to prevent multiple submit\n        $this.attr('disabled', 'disabled');\n        $feedUnlike.attr('disabled', 'disabled');\n\n        // Add loading animation\n        $this.addClass(\"loading\");\n\n        // AJAX\n        $.ajaxSetup({\n            headers: {\n                'X-CSRF-TOKEN': $('meta[name=\"_token\"]').attr('content')\n            }\n        });\n        $.ajax({\n            type: \"POST\",\n            dataType: \"json\",\n            url: \"/\" + $data_action_for + \"/\" + $group_id + \"/feed/\" + $feed_id + \"/like\",\n            success: function (data) {\n\n                console.log(data.json.feed_like_count, data.json.feed_unlike_count);\n\n                // Update feed like count\n                $feedLikeCount.text(data.json.feed_like_count);\n\n                // Update feed unlike count\n                $feedUnlikeCount.text(data.json.feed_unlike_count);\n\n                // Remove disabled attribute\n                $this.removeAttr(\"disabled\");\n                $feedUnlike.removeAttr(\"disabled\");\n\n                // Remove loading animation\n                $this.removeClass(\"loading\");\n            },\n            error: function (data) {\n                console.log(data);\n\n                // Remove disabled attribute\n                $this.removeAttr(\"disabled\");\n                $feedUnlike.removeAttr(\"disabled\");\n\n                // Remove loading animation\n                $this.removeClass(\"loading\");\n            }\n        });\n\n    });\n\n\n    /*--------------------------------------------------------------------------\n     | Unlike Feed\n     --------------------------------------------------------------------------*/\n    $body.on(\"click\", $feedUnlikeButton, function () {\n\n        // Cache\n        var $this = $(this);\n        var $feedUnlikeCount = $this.children(\".btn-sns__count\");\n        var $feedLike = $this.siblings(\".like-submit\");\n        var $feedLikeCount = $feedLike.children(\".btn-sns__count\");\n        var $group_id = $this.attr(\"data-group-id\");\n        var $feed_id = $this.attr(\"data-feed-id\");\n        var $data_action_for = $this.attr(\"data-action-for\");\n\n        // Disable inputs to prevent multiple submit\n        $this.attr('disabled', 'disabled');\n        $feedLike.attr('disabled', 'disabled');\n\n        // Add loading animation\n        $this.addClass(\"loading\");\n\n        // AJAX\n        $.ajaxSetup({\n            headers: {\n                'X-CSRF-TOKEN': $('meta[name=\"_token\"]').attr('content')\n            }\n        });\n        $.ajax({\n            type: \"POST\",\n            dataType: \"json\",\n            url: \"/\" + $data_action_for + \"/\" + $group_id + \"/feed/\" + $feed_id + \"/unlike\",\n            success: function (data) {\n\n                console.log(data.json.feed_like_count, data.json.feed_unlike_count);\n\n                // Update feed unlike count\n                $feedUnlikeCount.text(data.json.feed_unlike_count);\n\n                // Update feed like count\n                $feedLikeCount.text(data.json.feed_like_count);\n\n                // Remove disabled attribute\n                $this.removeAttr(\"disabled\");\n                $feedLike.removeAttr(\"disabled\");\n\n                // Remove loading animation\n                $this.removeClass(\"loading\");\n            },\n            error: function (data) {\n                console.log(data);\n\n                // Remove disabled attribute\n                $this.removeAttr(\"disabled\");\n                $feedLike.removeAttr(\"disabled\");\n\n                // Remove loading animation\n                $this.removeClass(\"loading\");\n            }\n        });\n\n    });\n\n\n    /*--------------------------------------------------------------------------\n     | Like Feed Reply\n     --------------------------------------------------------------------------*/\n    $body.on(\"click\", $feedReplyLikeButton, function () {\n\n        // Cache\n        var $this = $(this);\n        var $group_id = $this.attr(\"data-group-id\");\n        var $feedReplyLikeCount = $this.children(\".btn-sns__count\");\n        var $feedReplyUnlike = $this.siblings(\".unlike-submit\");\n        var $feedReplyUnlikeCount = $feedReplyUnlike.children(\".btn-sns__count\");\n        var $reply_id = $this.attr(\"data-reply-id\");\n        var $data_action_for = $this.attr(\"data-action-for\");\n\n        // Disable inputs to prevent multiple submit\n        $this.attr('disabled', 'disabled');\n        $feedReplyUnlike.attr('disabled', 'disabled');\n\n        // Add loading animation\n        $this.addClass(\"loading\");\n\n        // AJAX\n        $.ajaxSetup({\n            headers: {\n                'X-CSRF-TOKEN': $('meta[name=\"_token\"]').attr('content')\n            }\n        });\n        $.ajax({\n            type: \"POST\",\n            dataType: \"json\",\n            url: \"/\" + $data_action_for + \"/\" + $group_id + \"/comment/\" + $reply_id + \"/like\",\n            success: function (data) {\n\n                console.log(data.json.feed_reply_like_count, data.json.feed_reply_unlike_count);\n\n                // Update feed reply like count\n                $feedReplyLikeCount.text(data.json.feed_reply_like_count);\n\n                // Update feed reply unlike count\n                $feedReplyUnlikeCount.text(data.json.feed_reply_unlike_count);\n\n                // Remove disabled attribute\n                $this.removeAttr(\"disabled\");\n                $feedReplyUnlike.removeAttr(\"disabled\");\n\n                // Remove loading animation\n                $this.removeClass(\"loading\");\n            },\n            error: function (data) {\n                console.log(data);\n\n                // Remove disabled attribute\n                $this.removeAttr(\"disabled\");\n                $feedReplyUnlike.removeAttr(\"disabled\");\n\n                // Remove loading animation\n                $this.removeClass(\"loading\");\n            }\n        });\n\n    });\n\n\n    /*--------------------------------------------------------------------------\n     | Unlike Feed Reply\n     --------------------------------------------------------------------------*/\n    $body.on(\"click\", $feedReplyUnlikeButton, function () {\n\n        // Cache\n        var $this = $(this);\n        var $group_id = $this.attr(\"data-group-id\");\n        var $feedReplyUnlikeCount = $this.children(\".btn-sns__count\");\n        var $feedReplyLike = $this.siblings(\".like-submit\");\n        var $feedReplyLikeCount = $feedReplyLike.children(\".btn-sns__count\");\n        var $reply_id = $this.attr(\"data-reply-id\");\n        var $data_action_for = $this.attr(\"data-action-for\");\n\n        // Disable inputs to prevent multiple submit\n        $this.attr('disabled', 'disabled');\n        $feedReplyLike.attr('disabled', 'disabled');\n\n        // Add loading animation\n        $this.addClass(\"loading\");\n\n        // AJAX\n        $.ajaxSetup({\n            headers: {\n                'X-CSRF-TOKEN': $('meta[name=\"_token\"]').attr('content')\n            }\n        });\n        $.ajax({\n            type: \"POST\",\n            dataType: \"json\",\n            url: \"/\" + $data_action_for + \"/\" + $group_id + \"/comment/\" + $reply_id + \"/unlike\",\n            success: function (data) {\n\n                console.log(data.json.feed_reply_like_count, data.json.feed_reply_unlike_count);\n\n                // Update feed reply unlike count\n                $feedReplyUnlikeCount.text(data.json.feed_reply_unlike_count);\n\n                // Update feed reply like count\n                $feedReplyLikeCount.text(data.json.feed_reply_like_count);\n\n                // Remove disabled attribute\n                $this.removeAttr(\"disabled\");\n                $feedReplyLike.removeAttr(\"disabled\");\n\n                // Remove loading animation\n                $this.removeClass(\"loading\");\n            },\n            error: function (data) {\n                console.log(data);\n\n                // Remove disabled attribute\n                $this.removeAttr(\"disabled\");\n                $feedReplyLike.removeAttr(\"disabled\");\n\n                // Remove loading animation\n                $this.removeClass(\"loading\");\n            }\n        });\n\n    });\n\n\n});"],"sourceRoot":"/source/"}